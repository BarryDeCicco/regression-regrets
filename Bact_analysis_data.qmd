# Analysis ready data {#ARD}


```{r ard01, warning=FALSE, message=FALSE, echo=FALSE}
## Load libraries for this chapter
library(readr)
library(dplyr)
library(tidyr)
library(ggplot2)
library(tidyselect)
library(here)
library(janitor)
```


Based on the IDA plan prepare the data to be analysis ready: read, clean and tidy. 


## Analysis ready dataset

The aim of this section and the remaining chapters of the report are to document the steps taken towards transforming the *source* data set to an *analysis ready* data set.


In this section, additional meta-data is added to the *source* data set. 

We write this new modified (annotated) data set back to the `data` folder after adding additional meta-data for all variables. The meta-data is taken from the data dictionary. The aim is to produce an analysis ready data set for the research objective. 

At the stage we could select the variables of interest to take in to the IDA phase by dropping variables we do not check in IDA.

## Steps

Read in the source data dictionary 

```{r read_dict}
## Read in the source data dictionary and display 
bact_dd <- read_csv(here("data-raw", "Bacteremia_public_S2_Data_Dictionary.csv")) %>%
  arrange(VariableNr) |>
  clean_names() |>
  mutate(PARAMCD = variable )
```

Read in the source data.

```{r read_source, warning=FALSE, message=FALSE}
bact_data <- read_csv(here("data-raw", "Bacteremia_public_S2.csv")) 
```

Transform source data to a *long* format for the lab specific measurements. A long format enables efficient data processing. 

```{r contents_abact, warning=FALSE, message=FALSE, echo=FALSE} 

## transform
bact_data01 <-
  bact_data |>
  mutate(AGEP = AGE) |>  ## Create a copy of AGE to store as a predictor
  pivot_longer(
    cols = c(-ID,-SEX,-AGE,-BloodCulture),
    names_to = "PARAMCD",
    values_to = "AVAL",
    values_drop_na = FALSE
  ) |>
  mutate(PARAMCD = if_else(PARAMCD == "AGEP", "AGE", PARAMCD)) ## rename AGE param code 
```

Add the parameter information such as labels and units on to the transformed data directly from the data dictionary. 

Derive additional variables and metadata are per the analysis plan such as:

* Units 
* Variable type
* Categories for sex
* rename outcome 

```{r transform, warning=FALSE, message=FALSE, echo=FALSE} 
bact_data02 <- 
  bact_data01 |> 
  left_join(bact_dd, by = "PARAMCD") |>
  mutate(
    UNIT = units,
    TYPE = if_else(scale_of_measurement == "continuous", "numeric", "NA"), 
    NOTE = remark, 
    NOTE2 = from_paper,
    SEXC = case_when(
      SEX == 1 ~ "male",
      SEX == 2 ~ "female",
      TRUE ~ "NA"
    ),
    SUBJID = ID + 100000, 
    USUBJID = paste0("DC-2019-0054-", SUBJID),
    PARAM = paste0(label, " (", UNIT, ")"),
    BACTEREMIA = BloodCulture,
    BACTEREMIAN = case_when(
      BloodCulture == "no" ~ 0,
      BloodCulture == "yes" ~ 1)
  )

```

Select and re-order the variables as per the data set specification. 

```{r reorder, warning=FALSE, message=FALSE, echo=FALSE} 

# Should come from the data set specification
bact_data03 <- 
  bact_data02 %>%
  relocate(USUBJID, SUBJID, AGE, SEX, SEXC, BACTEREMIA, BACTEREMIAN, PARAM, PARAMCD, AVAL, UNIT, TYPE, NOTE, NOTE2) |>
  select(USUBJID, SUBJID, AGE, SEX, SEXC, BACTEREMIA, BACTEREMIAN, PARAM, PARAMCD, AVAL, UNIT, TYPE, NOTE, NOTE2)
```

Add variable metadata as label attributes

```{r meta_data, warning=FALSE, message=FALSE, echo=FALSE} 
attr(bact_data03$SUBJID, "label") <- "Patient Identifer"  
attr(bact_data03$USUBJID, "label") <- "Unique Patient Identifer with data souce reference: DC 2019-0054"  
attr(bact_data03$SEX, "label") <- "Patient gender"  
attr(bact_data03$SEX, "label") <- "Patient gender (Numeric coding, 1: male, 2: female)"  
attr(bact_data03$SEXC, "label") <- "Patient gender (Character coding)"  
attr(bact_data03$AGE, "label") <- "Patient age (years)"
attr(bact_data03$BACTEREMIA, "label") <- "Blood culture result for bacteremia (Character coding)"
attr(bact_data03$BACTEREMIAN, "label") <- "Blood culture result for bacteremia (Numeric coding, 0: No, 1: Yes)"
attr(bact_data03$PARAM, "label") <- "Parameter name"
attr(bact_data03$PARAMCD, "label") <- "Parameter code"
attr(bact_data03$AVAL, "label") <- "Parameter analysis value (Numeric)"
attr(bact_data03$UNIT, "label") <- "Parameter unit"
attr(bact_data03$TYPE, "label") <- "Parameter: variable type (Numeric, Character)"
attr(bact_data03$NOTE, "label") <- "Notes from source data dictionary - free text"
attr(bact_data03$NOTE2, "label") <- "Remarks from source data dictionary - free text"
```

Check we have not introduced any errors with the outcome variable. 

```{r outcome_check, warning=FALSE, message=FALSE, echo=FALSE} 
table(bact_data02$BloodCulture)
table(bact_data03$BACTEREMIA)
```

Set flags for predictors as per the IDA plan:

* age (AGE), leukocytes (WBC), blood urea neutrogen (BUN), creatinine (CREA), thrombocytes (PLT), and neutrophiles (NEU) and these predictors will be included in the model as key predictors

* Predictors of medium importance are potassium (POTASS), and some acute-phase related parameters such as fibrinogen (FIB), C-reactive protein (CRP), aspartate transaminase (ASAT), alanine transaminase (ALAT), and gamma-glutamyl transpeptidase (GGT).


```{r set_flags, warning=FALSE, message=FALSE, echo=FALSE} 
bact_data04 <-
  bact_data03 |>
  mutate(
    KEY_PRED_FL = case_when(
      PARAMCD %in% c("AGE", "WBC", "BUN", "CREA", "PLT", "NEU") ~ "Y"
      ),
    MED_PRED_FL = case_when(
      PARAMCD %in% c("POTASS", "FIB", "CRP", "ASAT", "ALAT", "GGT") ~ "Y"
      ),
    REM_PRED_FL = case_when(
      PARAMCD %in% c("MCV", "HGB", "HCT", "MCH", "MCHC", "RDW", "MPV", "LYM", "MONO", "EOS", "BASO", "NT", "APTT", "SODIUM", "CA", "PHOS", "MG", "HS", "GBIL", "TP", "ALB", "AMY", "PAMY", "LIP", "CHE", "AP", "LDH", "CK", "GLU", "TRIG", "CHOL", "BASOR", "EOSR", "LYMR", "MONOR", "NEUR", "PDW", "RBC") ~ "Y"
      )
  )


attr(bact_data04$KEY_PRED_FL, "label") <- "Key Predictor Flag"
attr(bact_data04$MED_PRED_FL, "label") <- "Predictors of medium importance Flag"
attr(bact_data04$REM_PRED_FL, "label") <- "Remaining Predictors Flag"
```

TODO: something with this text?
*"For example, leukocytes consist of five different types of blood cells (BASO, EOS, NEU, LYM and MONO), and the sum of the concentration of these types approximately (but not exactly) gives the leukocyte count, which is recorded in the variable WBC. Moreover, these variables are given as absolute counts and as percentages of the sum of the five variables, which creates some correlation. Some laboratory variables differ by sex and age, but the special selection of patients for this study (suspicion of bacteremia) may distort or alter the expected correlations with sex and age."*


Derive age groups. 

For the purpose of stratifying IDA results by age, age will be categorized into the following three groups: 

* [16, 50], 
* (50, 65], 
* (65, 101].

```{r age_groups, warning=FALSE, message=FALSE, echo=FALSE} 
bact_data05 <-
  bact_data04 |>
  mutate(AGEGR01 = case_when(AGE >= 16  & AGE <= 50 ~ 1,
                           AGE > 50 & AGE <= 65 ~ 2,
                           AGE > 65 & AGE <= 101 ~ 3),
         AGEGR01C = case_when(AGEGR01 == 1 ~ "[16, 50]",
                              AGEGR01 == 2 ~ "(50, 65]",
                              AGEGR01 == 3 ~ "(65, 101]"))

attr(bact_data05$AGEGR01, "label") <- "Age group 01 (Numeric coding)"
attr(bact_data05$AGEGR01C, "label") <- "Age group 01 (Character coding)"
```

Save the analysis data sets in to two linked data sets following a structure similar to the CDISC ADaM data standard. Individual patient measurements are stored in a data set called ADSL. The lab specific data sets are stored in ADLB (a long format data set). 

ADSL:

```{r save_adsl, warning=FALSE, message=FALSE, echo=FALSE} 
ADSL <- bact_data05 %>%
  filter(PARAMCD == "WBC") %>%
  select(USUBJID, SUBJID, AGE, AGEGR01, AGEGR01C, SEX, SEXC, BACTEREMIA, BACTEREMIAN)

saveRDS(ADSL, file = here("data", "ADSL_01.rds"))
```

ADLB: *Note AGE is also in ADLB as a key predictor*

```{r save_adlb, warning=FALSE, message=FALSE, echo=FALSE} 

ADLB <- bact_data05 %>%
  select(-AGE, -AGEGR01, -AGEGR01C, -SEX, -SEXC, -BACTEREMIA, -BACTEREMIAN)

saveRDS(ADLB, file = here("data", "ADLB_01.rds"))

```

Note: At this stage of IDA, both ADSL and ADLB are intermediate files that will be used for further IDA. Findings in IDA may require updates to either data set. 